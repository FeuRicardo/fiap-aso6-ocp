kind: Secret
apiVersion: v1
metadata:
  name: postgresfblog
  namespace: fblog
  labels:
    app: postgresfblog
    app.kubernetes.io/component: postgresfblog
    app.kubernetes.io/instance: postgresfblog
    template: postgresql-persistent-template
stringData:
  database-name: sampledb
  database-password: sampledb
  database-user: sampledb
type: Opaque
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: postgresfblog
  generation: 2
  labels:
    template: postgresql-persistent-template
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: blog-app
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:e8fc39b8d1fbdc230a3f04486dafcb7d7736d1f6bd51b0906bb924953e53c550
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: postgresfblog
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: postgresfblog
    spec:
      volumes:
        - name: postgresfblog-data
          persistentVolumeClaim:
            claimName: postgresfblog
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgresfblog
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresfblog
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresfblog
                  key: database-name
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgresfblog-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:e8fc39b8d1fbdc230a3f04486dafcb7d7736d1f6bd51b0906bb924953e53c550
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  replicas: 1
  readyReplicas: 1
---
kind: Service
apiVersion: v1
metadata:
  name: postgresfblog
  labels:
    app: django-psql-persistent
    template: django-psql-persistent
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    name: postgresfblog
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fiap-blog-app
  labels:    
    app: blog-django-py-git
    app.kubernetes.io/component: blog-django-py-git
    app.kubernetes.io/instance: blog-django-py-git
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7	
spec:
  selector:
    matchLabels:
      app: fiap-blog-app
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: fiap-blog-app
        deploymentconfig: blog-django-py-git
    spec:
      containers:
        - name: fiap-blog-app
          image: 'openshiftkatacoda/blog-django-py:latest'
          imagePullPolicy: Always
          terminationMessagePath: /dev/termination-log
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: 'postgresql://sampledb:sampledb@postgresfblog:5432/sampledb'  
---
kind: Service
apiVersion: v1
metadata:
  name: fiap-blog-app
  labels:
    app: fiap-blog-app
    app.kubernetes.io/component: fiap-blog-app
    app.kubernetes.io/instance: fiap-blog-app
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: fiap-blog-app
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}              
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: fiap-blog-app
  labels:
    app: fiap-blog-app
    app.kubernetes.io/component: fiap-blog-app
    app.kubernetes.io/instance: fiap-blog-app
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: blog-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.8-ubi7
spec:
  host: fiap-blog-app.apps.na46.prod.nextcle.com
  to:
    kind: Service
    name: fiap-blog-app
    weight: 100
  port:
    targetPort: 8080-tcp
  wildcardPolicy: None
status:
  ingress:
    - host: fiap-blog-app.apps.na46.prod.nextcle.com
      routerName: default
      wildcardPolicy: None
      routerCanonicalHostname: apps.na46.prod.nextcle.com  
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-fblog
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blog-django-py-git
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
